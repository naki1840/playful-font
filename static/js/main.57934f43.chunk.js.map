{"version":3,"sources":["components/HeroButton.tsx","components/TextAnime/TextAnime.tsx","components/TextAnime/useStable.ts","components/ControlButton.tsx","components/Accordion.tsx","constants/words.ts","constants/animeEffect.ts","components/TextAnime/animeControlHook.ts","constants/fonts.ts","FontBox.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ColorButtonGithub","withStyles","root","color","backgroundColor","Button","ButtonGithub","onClick","variant","startIcon","href","ColorButtonRefresh","ButtonRefresh","document","location","reload","ColorButtonFont","ButtonFont","TextAnime","forwardRef","ref","config","word","font","cascade","isStable","value","useRef","useState","setIsStable","useEffect","timer","current","setTimeout","clearTimeout","useStable","newWord","dispWord","split","map","el","index","style","display","flexDirection","justifyContent","useStyles","makeStyles","theme","button","margin","spacing","ButtonReset","classes","className","ButtonPause","ButtonPlay","Accordion","border","boxShadow","borderBottom","expanded","MuiAccordion","warapper","position","height","AccordionSummaryWrapper","children","AccordionSummary","width","bottom","borderRadius","minHeight","content","MuiAccordionSummary","AccordionDetails","MuiAccordionDetails","words","commonConfig","delay","i","loop","direction","autoplay","endDelay","animeEffects","name","translateY","opacity","easing","useAnimeControl","Math","floor","random","length","animeIndex","setAnimeIndex","animeEffect","setAnimeEffect","newAnimeEffect","restart","play","pause","reverse","handleChangeAnimeIndex","event","parseInt","target","fonts","weights","bgList","bg","props","main","paddingTop","paddingBottom","overflow","FontBox","animeControl","React","fontIndex","setFontIndex","setFont","newFont","setWord","subsets","clsx","Typography","component","align","fontFamily","expandIcon","aria-controls","id","TextField","label","onChange","select","helperText","option","mapIndex","MenuItem","heroContent","palette","background","paper","padding","heroButtons","marginTop","footer","list","App","CssBaseline","Container","maxWidth","gutterBottom","paragraph","Grid","container","justify","item","Link","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.57934f43.chunk.js","sourcesContent":["import React, { FC } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport RefreshRoundedIcon from '@material-ui/icons/RefreshRounded'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport FontDownloadRoundedIcon from '@material-ui/icons/FontDownloadRounded'\nimport Button from '@material-ui/core/Button'\n\ntype Props = {\n  onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n}\n\nconst ColorButtonGithub = withStyles(() => ({\n  root: {\n    color: '#444444',\n    backgroundColor: '#B8F2E6',\n    '&:hover': {\n      backgroundColor: '#98ECDB',\n    },\n  },\n}))(Button)\nexport const ButtonGithub: FC<Props> = ({ onClick }) => (\n  <ColorButtonGithub\n    variant=\"contained\"\n    color=\"primary\"\n    startIcon={<GitHubIcon />}\n    onClick={onClick}\n    href=\"https://github.com/naki1840\"\n  >\n    GitHub\n  </ColorButtonGithub>\n)\n\nconst ColorButtonRefresh = withStyles(() => ({\n  root: {\n    color: '#444444',\n    backgroundColor: '#FFA69E',\n    '&:hover': {\n      backgroundColor: '#FF8F85',\n    },\n  },\n}))(Button)\nexport const ButtonRefresh: FC<Props> = () => (\n  <ColorButtonRefresh\n    variant=\"contained\"\n    color=\"primary\"\n    startIcon={<RefreshRoundedIcon />}\n    onClick={() => document.location.reload()}\n  >\n    再読み込み\n  </ColorButtonRefresh>\n)\n\nconst ColorButtonFont = withStyles(() => ({\n  root: {\n    color: '#444444',\n    backgroundColor: '#AED9E0',\n    '&:hover': {\n      backgroundColor: '#97CFD8',\n    },\n  },\n}))(Button)\nexport const ButtonFont: FC<Props> = ({ onClick }) => (\n  <ColorButtonFont\n    variant=\"contained\"\n    color=\"primary\"\n    startIcon={<FontDownloadRoundedIcon />}\n    onClick={onClick}\n    href=\"https://fonts.google.com/\"\n  >\n    Font\n  </ColorButtonFont>\n)\n","import React, { forwardRef } from 'react'\nimport Anime from 'react-animejs-wrapper'\nimport { AnimeElement } from './animeControlHook'\nimport { useStable } from './useStable'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype AnimePropsConfig = any\ntype Props = {\n  config: AnimePropsConfig\n  word: string\n  font: string\n  cascade?: boolean\n}\n// eslint-disable-next-line prefer-arrow-callback\nexport const TextAnime = forwardRef<AnimeElement, Props>(function TextAnime(\n  { config, word, font, cascade = true },\n  ref\n) {\n  const isStable = useStable(font)\n\n  if (!config) return null\n\n  const newWord = isStable && word ? word : ' '\n  /* eslint-disable react/no-array-index-key */\n  const dispWord = cascade\n    ? newWord\n        .split('')\n        .map((el) => (el === ' ' ? '\\u00A0' : el))\n        .map((el, index) => <div key={index}>{el}</div>)\n    : newWord\n  /* eslint-enable react/no-array-index-key */\n\n  return (\n    <Anime\n      ref={ref}\n      style={{\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n      }}\n      config={config}\n    >\n      {dispWord}\n    </Anime>\n  )\n})\n","import { useState, useEffect, useRef } from 'react'\n\nexport const useStable = (value: string | number): boolean => {\n  const ref = useRef<string | number>()\n  const [isStable, setIsStable] = useState<boolean>(false)\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout\n    if (ref.current !== value) {\n      setIsStable(false)\n      timer = setTimeout(() => setIsStable(true), 500)\n    }\n    ref.current = value\n    return () => clearTimeout(timer)\n  }, [value])\n\n  return isStable\n}\n","import React, { FC } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft'\nimport PauseIcon from '@material-ui/icons/Pause'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}))\n\ntype Props = {\n  onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n}\nexport const ButtonReset: FC<Props> = ({ onClick }) => {\n  const classes = useStyles()\n\n  return (\n    <Button\n      variant=\"outlined\"\n      color=\"primary\"\n      className={classes.button}\n      startIcon={<RotateLeftIcon />}\n      onClick={onClick}\n    >\n      Reset\n    </Button>\n  )\n}\n\nexport const ButtonPause: FC<Props> = ({ onClick }) => {\n  const classes = useStyles()\n\n  return (\n    <Button\n      variant=\"outlined\"\n      color=\"primary\"\n      className={classes.button}\n      startIcon={<PauseIcon />}\n      onClick={onClick}\n    >\n      Pause\n    </Button>\n  )\n}\n\nexport const ButtonPlay: FC<Props> = ({ onClick }) => {\n  const classes = useStyles()\n\n  return (\n    <Button\n      variant=\"outlined\"\n      color=\"primary\"\n      className={classes.button}\n      startIcon={<PlayArrowIcon />}\n      onClick={onClick}\n    >\n      Play\n    </Button>\n  )\n}\n","import React, { FC } from 'react'\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\nimport MuiAccordion from '@material-ui/core/Accordion'\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary'\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails'\n\nexport const Accordion = withStyles({\n  root: {\n    border: 'none',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n    '&$expanded': {\n      margin: 'auto',\n    },\n  },\n  expanded: {},\n})(MuiAccordion)\n\nconst useStyles = makeStyles(() => ({\n  warapper: {\n    position: 'relative',\n    height: '10px',\n  },\n}))\nexport const AccordionSummaryWrapper: FC = ({ children }) => {\n  const classes = useStyles()\n  return <div className={classes.warapper}>{children}</div>\n}\n\nexport const AccordionSummary = withStyles({\n  root: {\n    width: '100px',\n    backgroundColor: 'rgba(255,255,255,1.0)',\n    position: 'absolute',\n    bottom: '0px',\n    borderRadius: '6px',\n    '&$expanded': {\n      minHeight: '20px',\n    },\n  },\n  content: {\n    '&$expanded': {\n      margin: '15px 0;',\n    },\n  },\n  expanded: {},\n})(MuiAccordionSummary)\n\nexport const AccordionDetails = withStyles({\n  root: {\n    flexDirection: 'column',\n  },\n})(MuiAccordionDetails)\n","export const words = [\n  'welcome',\n  'Good Morning',\n  'Good Afternoon',\n  'Good Evening',\n  'Hello',\n  'Thank you',\n  'Welcome & Thank you!',\n  'Have a wonderful time!',\n  'Congratulations!',\n  'Cheers!',\n  'Wonderful!',\n  'Best wishes!',\n  'Sounds good!',\n  'Awesome',\n  'Believe in yourself',\n  'Just do it',\n  'Let it be',\n  'Let’s have a break',\n  'Keep smiling',\n  'Success',\n  'Time is money',\n  'Have a nice day!',\n  'Good luck!',\n]\n\nexport const getRandomWord = (): string => words[Math.floor(Math.random() * words.length)]\n","// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type AnimeEffect = { name: string; config: any }\n\nconst commonConfig = {\n  delay(el: never, i: number): number {\n    return i * 100\n  },\n  loop: true,\n  direction: 'normal',\n  autoplay: true,\n  endDelay: 1000,\n}\nexport const animeEffects: AnimeEffect[] = [\n  {\n    name: 'Fade in',\n    config: {\n      translateY: 0,\n      opacity: [0, 1],\n      easing: 'easeInOutSine',\n      ...commonConfig,\n    },\n  },\n  {\n    name: 'Fade in from the top',\n    config: {\n      translateY: [-50, 0],\n      opacity: [0, 1],\n      easing: 'easeInOutSine',\n      ...commonConfig,\n    },\n  },\n  {\n    name: 'Raindrops',\n    config: {\n      translateY: [-80, 0],\n      opacity: [0, 1],\n      easing: 'easeOutBounce',\n      ...commonConfig,\n    },\n  },\n  {\n    name: 'Light on',\n    config: {\n      translateY: 0,\n      opacity: [0, 1],\n      easing: 'easeInBounce',\n      ...commonConfig,\n    },\n  },\n]\n\nexport const getRandomAnimeIndex = (): number => Math.floor(Math.random() * animeEffects.length)\n","import { useState, useEffect, useRef } from 'react'\nimport { animeEffects, getRandomAnimeIndex, AnimeEffect } from 'src/constants/animeEffect'\n\nexport type AnimeElement = HTMLElement & {\n  restart: () => void\n  play: () => void\n  pause: () => void\n  reverse: () => void\n}\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const useAnimeControl = () => {\n  const ref = useRef<AnimeElement>(null)\n\n  const restart = () => ref.current?.restart()\n  const play = () => ref.current?.play()\n  const pause = () => ref.current?.pause()\n  const reverse = () => ref.current?.reverse()\n\n  const [animeIndex, setAnimeIndex] = useState<number>(getRandomAnimeIndex())\n  const [animeEffect, setAnimeEffect] = useState<AnimeEffect>(animeEffects[animeIndex])\n  const handleChangeAnimeIndex = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setAnimeIndex(parseInt(event.target.value, 10))\n  }\n  useEffect(() => {\n    const newAnimeEffect = animeEffects[animeIndex]\n    setAnimeEffect({ ...newAnimeEffect })\n  }, [animeIndex])\n\n  return {\n    ref,\n    restart,\n    play,\n    pause,\n    reverse,\n    animeIndex,\n    animeEffect,\n    handleChangeAnimeIndex,\n  }\n}\n","import { Font } from 'react-google-font-loader'\n\nexport type { Font }\n\nexport const fonts: Font[] = [\n  { font: 'Pacifico', weights: [400] },\n  { font: 'Goblin One', weights: [400] },\n  { font: 'Crimson Text', weights: [400] },\n  { font: 'Zen Dots', weights: [400] },\n  { font: 'Dancing Script', weights: [400] },\n  { font: 'Itim', weights: [400] },\n  { font: 'Girassol', weights: [400] },\n  { font: 'Josefin Sans', weights: [400] },\n  { font: 'Anton', weights: [400] },\n  { font: 'Dosis', weights: [400] },\n  { font: 'Libre Baskerville', weights: [400] },\n  { font: 'Lobster', weights: [400] },\n  { font: 'New Tegomin', weights: [400] },\n  { font: 'EB Garamond', weights: [400] },\n  { font: 'Indie Flower', weights: [400] },\n  { font: 'Original Surfer', weights: [400] },\n  { font: 'Abril Fatface', weights: [400] },\n  { font: 'Caveat', weights: [400] },\n  { font: 'Satisfy', weights: [400] },\n  { font: 'Righteous', weights: [400] },\n  { font: 'Cinzel', weights: [400] },\n  { font: 'Permanent Marker', weights: [400] },\n  { font: 'Great Vibes', weights: [400] },\n  { font: 'Sacramento', weights: [400] },\n]\n\nexport const getRandomFontIndex = (): number => Math.floor(Math.random() * fonts.length)\n","/* eslint-disable react/no-array-index-key */\nimport React, { FC, useEffect, useState } from 'react'\nimport GoogleFontLoader, { Font } from 'react-google-font-loader'\nimport clsx from 'clsx'\nimport { Theme, makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport { TextAnime } from 'src/components/TextAnime'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport TextField from '@material-ui/core/TextField'\nimport { ButtonReset, ButtonPause, ButtonPlay } from 'src/components/ControlButton'\nimport {\n  Accordion,\n  AccordionSummaryWrapper,\n  AccordionSummary,\n  AccordionDetails,\n} from 'src/components/Accordion'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { getRandomWord } from 'src/constants/words'\nimport { useAnimeControl } from './components/TextAnime/animeControlHook'\nimport { fonts, getRandomFontIndex } from './constants/fonts'\n\nconst bgList = ['#faf3dd', '#b8f2e6', '#ffa69e', '#aed9e0', '#5e6472']\ntype StyleProps = {\n  index: number\n}\nconst useStyles = makeStyles<Theme, StyleProps>((theme) => ({\n  bg: (props) => ({ backgroundColor: bgList[props.index % bgList.length] }),\n  main: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n    overflow: 'hidden',\n  },\n}))\n\ntype Props = {\n  index: number\n}\nexport const FontBox: FC<Props> = ({ index }) => {\n  const classes = useStyles({ index })\n\n  const animeControl = useAnimeControl()\n\n  const [fontIndex, setFontIndex] = React.useState<number>(getRandomFontIndex())\n  const [font, setFont] = useState<Font[]>([])\n  const handleChangeFontIndex = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFontIndex(parseInt(event.target.value, 10))\n  }\n  useEffect(() => {\n    const newFont = fonts[fontIndex]\n    setFont([newFont])\n  }, [fontIndex])\n\n  const [word, setWord] = useState<string>(getRandomWord())\n  const handleChangeWord = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setWord(event.target.value)\n\n  return (\n    <>\n      <GoogleFontLoader fonts={font} subsets={['cyrillic-ext', 'greek']} />\n      <div className={clsx(classes.main, classes.bg)}>\n        <Typography\n          component=\"h3\"\n          variant=\"h3\"\n          align=\"center\"\n          color=\"textPrimary\"\n          style={{ fontFamily: font[0]?.font }}\n        >\n          <TextAnime\n            ref={animeControl.ref}\n            config={animeControl.animeEffect.config}\n            word={word}\n            font={font[0]?.font}\n          />\n        </Typography>\n      </div>\n      <Accordion>\n        <AccordionSummaryWrapper>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id={`panel1a-header-${index}`}\n          >\n            <Typography>setting</Typography>\n          </AccordionSummary>\n        </AccordionSummaryWrapper>\n        <AccordionDetails>\n          <div>\n            <Typography>Animation Control</Typography>\n            <ButtonReset onClick={animeControl.restart} />\n            <ButtonPause onClick={animeControl.pause} />\n            <ButtonPlay onClick={animeControl.play} />\n          </div>\n          <div>\n            <Typography>Word Setting</Typography>\n            <TextField id=\"standard-basic\" label=\"Word\" value={word} onChange={handleChangeWord} />\n            <TextField\n              id=\"standard-select-font\"\n              select\n              label=\"Select\"\n              value={fontIndex}\n              onChange={handleChangeFontIndex}\n              helperText=\"Please select your font\"\n            >\n              {fonts.map((option, mapIndex) => (\n                <MenuItem key={mapIndex} value={mapIndex}>\n                  {option.font}\n                </MenuItem>\n              ))}\n            </TextField>\n          </div>\n        </AccordionDetails>\n      </Accordion>\n    </>\n  )\n}\n","import React, { FC } from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Link from '@material-ui/core/Link'\nimport { ButtonRefresh, ButtonGithub, ButtonFont } from 'src/components/HeroButton'\nimport { FontBox } from './FontBox'\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}))\n\nconst list = [1, 2, 3]\n\nexport const App: FC = () => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <CssBaseline />\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              Playful Font\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Playful\n              Fontは文字のアニメーションで遊べるサイトです。フォントや文字を自由にカスタマイズできます。\n            </Typography>\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item>\n                  <ButtonRefresh />\n                </Grid>\n                <Grid item>\n                  <ButtonGithub />\n                </Grid>\n                <Grid item>\n                  <ButtonFont />\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n        {list.map((item, index) => (\n          <FontBox key={item} index={index} />\n        ))}\n\n        <Container maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={1} />\n        </Container>\n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Created by{' '}\n          <Link color=\"inherit\" href=\"https://github.com/naki1840\">\n            naki1840\n          </Link>\n        </Typography>\n      </footer>\n      {/* End footer */}\n    </>\n  )\n}\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\n// eslint-disable-next-line import/no-default-export\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}